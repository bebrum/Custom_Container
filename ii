import openpyxl
from datetime import datetime
import matplotlib.pyplot as plt
from collections import defaultdict

# Настройки
INPUT_FILE = "your_file.xlsx"  # Замените на имя вашего файла
DATE_COLUMN = 0  # Первый столбец (индекс 0)
CHART_TITLE = "Количество записей по дням"
OUTPUT_CHART = "records_chart.png"

def analyze_records():
    # Загружаем книгу
    wb = openpyxl.load_workbook(INPUT_FILE)
    ws = wb.active
    
    # Словарь для подсчета записей по дням
    date_counts = defaultdict(int)
    
    for row in ws.iter_rows(values_only=True):
        cell_value = row[DATE_COLUMN]
        
        # Пропускаем пустые значения
        if not cell_value:
            continue
            
        # Обрабатываем datetime объект
        if isinstance(cell_value, datetime):
            date_only = cell_value.date()  # Извлекаем только дату
            date_counts[date_only] += 1
        else:
            print(f"Неожиданный формат даты: {cell_value} (тип: {type(cell_value)})")
            continue
    
    # Проверяем, есть ли данные
    if not date_counts:
        print("Нет данных для построения диаграммы!")
        return
    
    # Подготовка данных для графика
    sorted_dates = sorted(date_counts.keys())
    dates_str = [d.strftime("%d.%m.%Y") for d in sorted_dates]
    counts = [date_counts[d] for d in sorted_dates]
    max_count = max(counts)
    
    # Создание диаграммы
    plt.figure(figsize=(12, 6))
    bars = plt.bar(dates_str, counts, color='#4b8bbe')
    
    # Настройка внешнего вида
    plt.title(CHART_TITLE)
    plt.xlabel("Дата")
    plt.ylabel("Количество записей")
    plt.ylim(0, max_count + 1)
    plt.xticks(rotation=45, ha='right')
    plt.grid(axis='y', linestyle='--', alpha=0.7)
    
    # Добавляем подписи значений
    for bar in bars:
        height = bar.get_height()
        plt.text(bar.get_x() + bar.get_width()/2., height,
                str(height),
                ha='center', va='bottom')
    
    plt.tight_layout()
    plt.savefig(OUTPUT_CHART, dpi=300)
    print(f"Диаграмма сохранена как {OUTPUT_CHART}")
    
    # Вывод статистики
    print("\nСтатистика по дням:")
    for date, count in sorted(date_counts.items()):
        print(f"{date.strftime('%d.%m.%Y')}: {count} записей")
    
    plt.show()

if __name__ == "__main__":
    analyze_records()
