import openpyxl
from openpyxl import load_workbook

def parse_accounts_from_xlsx(file_path):
    """
    Парсит xlsx файл и создает словарь с номерами счетов и списками штрихкодов
    
    Args:
        file_path (str): путь к xlsx файлу
        
    Returns:
        dict: словарь в формате {номер_счета: [список_штрихкодов]}
    """
    # Загружаем книгу Excel
    wb = load_workbook(filename=file_path)
    sheet = wb.active
    
    result_dict = {}
    current_account = None
    barcodes_list = []
    
    # Проходим по всем строкам в листе
    for row in sheet.iter_rows(values_only=True):
        # Пропускаем пустые строки
        if not row or row[0] is None:
            continue
            
        # Проверяем, является ли строка строкой со счетом
        if isinstance(row[0], str) and "счет" in row[0].lower():
            # Если у нас уже есть текущий счет, сохраняем его данные
            if current_account is not None and barcodes_list:
                result_dict[current_account] = barcodes_list.copy()
            
            # Извлекаем номер счета
            try:
                current_account = row[0].split(" ")[3][1:]
                barcodes_list = []  # Сбрасываем список штрихкодов для нового счета
            except IndexError:
                print(f"Ошибка при парсинге номера счета из строки: {row[0]}")
                current_account = None
                continue
        
        # Если это строка с прибором (11 столбец содержит числовой штрихкод)
        elif current_account is not None and len(row) > 10 and row[10] is not None:
            try:
                # Пытаемся преобразовать значение в число (штрихкод)
                barcode = float(row[10])
                barcodes_list.append(str(int(barcode)))  # Преобразуем в целое число и затем в строку
            except (ValueError, TypeError):
                # Если не число, пропускаем
                continue
    
    # Добавляем последний счет
    if current_account is not None and barcodes_list:
        result_dict[current_account] = barcodes_list
    
    return result_dict

# Пример использования
if __name__ == "__main__":
    file_path = "ваш_файл.xlsx"  # Укажите путь к вашему файлу
    
    try:
        accounts_dict = parse_accounts_from_xlsx(file_path)
        
        # Выводим результат
        print("Результат парсинга:")
        for account, barcodes in accounts_dict.items():
            print(f"Счет {account}: {len(barcodes)} штрихкодов")
            print(f"  Штрихкоды: {barcodes}")
            print()
            
        # Сохраняем результат в файл (опционально)
        with open("результат.txt", "w", encoding="utf-8") as f:
            for account, barcodes in accounts_dict.items():
                f.write(f"Счет {account}: {barcodes}\n")
                
        print(f"Результат сохранен в файл 'результат.txt'")
        
    except FileNotFoundError:
        print(f"Файл {file_path} не найден!")
    except Exception as e:
        print(f"Произошла ошибка: {e}")
